# server {
#    listen 80;
#    server_name localhost;
#    
#    location / {
#        root /usr/share/nginx/html;
#        index index.html index.htm;
#        try_files $uri /index.html;
#    }
    
    # Proxy API requests to backend
#    location /api {
#        proxy_pass http://host.docker.internal:4000;
#        proxy_http_version 1.1;
#        proxy_set_header Upgrade $http_upgrade;
#        proxy_set_header Connection 'upgrade';
#        proxy_set_header Host $host;
#        proxy_cache_bypass $http_upgrade;
#    }
    
    # Proxy requests to backend without /api prefix
#    location /auth {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /user {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /post {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /upload {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /chat {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /message {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /notification {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    location /images {
#        proxy_pass http://host.docker.internal:4000;
#    }
    
#    error_page 500 502 503 504 /50x.html;
#    location = /50x.html {
#        root /usr/share/nginx/html;
#    }
#}

server {
    listen 80;
    server_name localhost;
    
    location / {
        root /usr/share/nginx/html;
        index index.html index.htm;
        try_files $uri /index.html;
    }
    
    # IMPORTANT: Use 'server' since that's what your app expects from docker-compose
    # But we'll create an alias service in Kubernetes to make this work
    location /auth {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /user {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /post {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /upload {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /chat {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /message {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /notification {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    location /images {
        proxy_pass http://server:4000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }
    
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
}